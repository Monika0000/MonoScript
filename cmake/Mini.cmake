list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/aot-runtime.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/abcremoval.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/alias-analysis.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/driver.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-runtime.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-exceptions.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/calls.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/llvmonly-runtime.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/jit-icalls.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/cfold.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/cfgdump.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/debugger-agent.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/debug-mini.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/debugger-engine.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/seq-points.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-native-types.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-generic-sharing.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-trampolines.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-codegen.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/method-to-ir.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/decompose.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/unwind.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/dominators.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/liveness.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/graph.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/trace.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/dwarfwriter.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/debugger-state-machine.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/genmdesc.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/helpers.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/image-writer.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/interp-stubs.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/intrinsics.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/linear-scan.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/lldb.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/local-propagation.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/memory-access.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/monovm.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-gc.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/simd-intrinsics.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/ssa.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/tasklets.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/tiered.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/type-checking.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/xdebug.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-profiler.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/branch-opts.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/aot-compiler.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-cross-helpers.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/aot-runtime.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/debugger-agent-stubs.c)

#list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-mips.c)
#list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/llvm-jit.cpp)
#list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/llvm-runtime.cpp)

if (WIN32)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/arch-stubs.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-amd64.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/exceptions-amd64.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-amd64-gsharedvt.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/tramp-amd64-gsharedvt.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/tramp-amd64.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-windows.c)
    list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/mini-windows-tls-callback.c)
endif()

# ----------------------------------------------------------------------------------------------------------------------
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/interp/interp.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/interp/interp-intrins.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/interp/transform.c)
list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/interp/mintops.c)
#list(APPEND MONO_SCRIPT_MINI_SOURCES ${MONO_SCRIPT_LIBRARY_PATH}/mono/mini/interp/whitebox.c)

add_library(MonoScriptMini STATIC ${MONO_SCRIPT_MINI_SOURCES})

include(Metadata.cmake)

target_link_libraries(MonoScriptMini MonoScriptMetadata)

target_include_directories(MonoScriptMini PRIVATE ${MONO_SCRIPT_LIBRARY_PATH})
target_include_directories(MonoScriptMini PRIVATE ${MONO_SCRIPT_LIBRARY_PATH}/mono)
target_include_directories(MonoScriptMini PRIVATE ${MONO_SCRIPT_LIBRARY_PATH}/mono/eglib)
target_include_directories(MonoScriptMini PRIVATE ${MONO_SCRIPT_CONFIG_PATH})

if (WIN32)
    target_compile_definitions(MonoScriptMini PRIVATE HAVE_API_SUPPORT_WIN32_LOAD_LIBRARY)
    target_compile_definitions(MonoScriptMini PRIVATE HAVE_API_SUPPORT_WIN32_CONSOLE=1)
    target_compile_definitions(MonoScriptMini PRIVATE HAVE_API_SUPPORT_WIN32_GET_MODULE_HANDLE)

    if (MONO_SCRIPT_CROSS)
        target_compile_definitions(MonoScriptMini PRIVATE USED_CROSS_COMPILER_OFFSETS=1)
        target_compile_definitions(MonoScriptMini PRIVATE MONO_CROSS_COMPILE=1)
    endif()
endif()
